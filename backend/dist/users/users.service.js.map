{"version":3,"sources":["../../src/users/users.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository<User>,\n  ) {}\n\n  create(user: Partial<User>): Promise<User> {\n    return this.usersRepository.save(user);\n  }\n\n  findAll(): Promise<User[]> {\n    return this.usersRepository.find();\n  }\n\n  findOne(id: number): Promise<User> {\n    return this.usersRepository.findOneBy({ id });\n  }\n\n  async update(id: number, userData: Partial<User>): Promise<User> {\n    await this.usersRepository.update(id, userData);\n    return this.findOne(id);\n  }\n\n  async remove(id: number): Promise<void> {\n    await this.usersRepository.delete(id);\n  }\n}\n"],"names":["UsersService","create","user","usersRepository","save","findAll","find","findOne","id","findOneBy","update","userData","remove","delete","constructor"],"mappings":";;;;+BAMaA;;;eAAAA;;;wBANc;yBACM;0BACN;4BACN;;;;;;;;;;;;;;;AAGd,IAAA,AAAMA,eAAN,MAAMA;IAMXC,OAAOC,IAAmB,EAAiB;QACzC,OAAO,IAAI,CAACC,eAAe,CAACC,IAAI,CAACF;IACnC;IAEAG,UAA2B;QACzB,OAAO,IAAI,CAACF,eAAe,CAACG,IAAI;IAClC;IAEAC,QAAQC,EAAU,EAAiB;QACjC,OAAO,IAAI,CAACL,eAAe,CAACM,SAAS,CAAC;YAAED;QAAG;IAC7C;IAEA,MAAME,OAAOF,EAAU,EAAEG,QAAuB,EAAiB;QAC/D,MAAM,IAAI,CAACR,eAAe,CAACO,MAAM,CAACF,IAAIG;QACtC,OAAO,IAAI,CAACJ,OAAO,CAACC;IACtB;IAEA,MAAMI,OAAOJ,EAAU,EAAiB;QACtC,MAAM,IAAI,CAACL,eAAe,CAACU,MAAM,CAACL;IACpC;IAxBAM,YACE,AACQX,eAAiC,CACzC;aADQA,kBAAAA;IACP;AAsBL"}