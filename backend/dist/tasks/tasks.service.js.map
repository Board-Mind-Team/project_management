{"version":3,"sources":["../../src/tasks/tasks.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Task } from './entities/task.entity';\n\n@Injectable()\nexport class TasksService {\n  constructor(\n    @InjectRepository(Task)\n    private tasksRepository: Repository<Task>,\n  ) {}\n\n  create(task: Partial<Task>): Promise<Task> {\n    return this.tasksRepository.save(task);\n  }\n\n  findAll(): Promise<Task[]> {\n    return this.tasksRepository.find({ relations: ['assignedTo'] });\n  }\n\n  findOne(id: number): Promise<Task> {\n    return this.tasksRepository.findOne({ where: { id }, relations: ['assignedTo'] });\n  }\n\n  async update(id: number, taskData: Partial<Task>): Promise<Task> {\n    await this.tasksRepository.update(id, taskData);\n    return this.findOne(id);\n  }\n\n  async remove(id: number): Promise<void> {\n    await this.tasksRepository.delete(id);\n  }\n}\n"],"names":["TasksService","create","task","tasksRepository","save","findAll","find","relations","findOne","id","where","update","taskData","remove","delete","constructor"],"mappings":";;;;+BAMaA;;;eAAAA;;;wBANc;yBACM;0BACN;4BACN;;;;;;;;;;;;;;;AAGd,IAAA,AAAMA,eAAN,MAAMA;IAMXC,OAAOC,IAAmB,EAAiB;QACzC,OAAO,IAAI,CAACC,eAAe,CAACC,IAAI,CAACF;IACnC;IAEAG,UAA2B;QACzB,OAAO,IAAI,CAACF,eAAe,CAACG,IAAI,CAAC;YAAEC,WAAW;gBAAC;aAAa;QAAC;IAC/D;IAEAC,QAAQC,EAAU,EAAiB;QACjC,OAAO,IAAI,CAACN,eAAe,CAACK,OAAO,CAAC;YAAEE,OAAO;gBAAED;YAAG;YAAGF,WAAW;gBAAC;aAAa;QAAC;IACjF;IAEA,MAAMI,OAAOF,EAAU,EAAEG,QAAuB,EAAiB;QAC/D,MAAM,IAAI,CAACT,eAAe,CAACQ,MAAM,CAACF,IAAIG;QACtC,OAAO,IAAI,CAACJ,OAAO,CAACC;IACtB;IAEA,MAAMI,OAAOJ,EAAU,EAAiB;QACtC,MAAM,IAAI,CAACN,eAAe,CAACW,MAAM,CAACL;IACpC;IAxBAM,YACE,AACQZ,eAAiC,CACzC;aADQA,kBAAAA;IACP;AAsBL"}